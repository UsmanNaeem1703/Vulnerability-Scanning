from flask import Flask, render_template, request, jsonify, redirect, url_for
from automation.automation_script import main, get_task_progress  # Assuming get_task_progress() is added in automation_script.py
from gvm.connections import UnixSocketConnection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeCheckCommandTransform

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/automate/openvas', methods=['GET', 'POST'])
def run_openvas():
    if request.method == 'POST':
        ip = request.form['ip']
        ports = request.form['ports']
        target_name = request.form['target_name']
        task_name = request.form['task_name']
        
        try:
            pdf_path = main(ip, ports, target_name, task_name)
            if pdf_path:
                return redirect(url_for('thank_you'))
            else:
                return jsonify({"status": "error", "message": "Failed to generate report."})
        except Exception as e:
            return jsonify({"status": "error", "message": str(e)})
    
    return render_template('openvas_form.html')

@app.route('/task_progress/<task_id>')
def task_progress(task_id):
    try:
        path = '/run/gvmd/gvmd.sock'
        connection = UnixSocketConnection(path=path)
        transform = EtreeCheckCommandTransform()
        username = 'admin'
        password = 'ad21ad01-bc17-4d15-bf81-99461573d84a'

        with Gmp(connection=connection, transform=transform) as gmp:
            gmp.authenticate(username, password)
            progress = get_task_progress(gmp, task_id)
            return jsonify({"status": "success", "progress": progress})
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)})

@app.route('/thank_you')
def thank_you():
    return render_template('thank_you.html')

if __name__ == '__main__':
    app.run(debug=True)
